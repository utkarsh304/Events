{"ast":null,"code":"var _jsxFileName = \"C:\\\\Complete Web Development\\\\React.js\\\\01-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useParams } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const params = useParams();\n  return /*#__PURE__*/_jsxDEV(EventItem, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetailPage, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useParams","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","params","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Complete Web Development/React.js/01-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, useParams } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\"\r\n\r\nconst EventDetailPage = () => {\r\n    const params = useParams();\r\n\r\n    return (\r\n        <EventItem />\r\n    );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({request, params}) {\r\n    const id = params.eventId;\r\n    const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n    if (!response.ok) {\r\n        throw json({message: \"Could not fetch details for selected event.\"}, {status: 500});\r\n    } else {\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,SAAS,QAAQ,kBAAkB;AAClD,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,MAAM,GAAGN,SAAS,EAAE;EAE1B,oBACIG,OAAA,CAACF,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAErB,CAAC;AAAAL,EAAA,CANKD,eAAe;EAAA,QACFJ,SAAS;AAAA;AAAAW,EAAA,GADtBP,eAAe;AAQrB,eAAeA,eAAe;AAE9B,OAAO,eAAeQ,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAER;EAAM,CAAC,GAAAO,IAAA;EAC1C,MAAME,EAAE,GAAGT,MAAM,CAACU,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMpB,IAAI,CAAC;MAACqB,OAAO,EAAE;IAA6C,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACvF,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
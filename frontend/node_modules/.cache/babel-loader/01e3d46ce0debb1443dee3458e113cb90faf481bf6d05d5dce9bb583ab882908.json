{"ast":null,"code":"var _jsxFileName = \"C:\\\\Complete Web Development\\\\React.js\\\\01-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  // const data = useLoaderData();\n  const data = useRouteLoaderData(\"event-detail\"); // Passing the id that we assigned in our route in App.js file.\n\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Complete Web Development/React.js/01-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json , useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\"\r\n\r\nconst EventDetailPage = () => {\r\n    // const data = useLoaderData();\r\n    const data = useRouteLoaderData(\"event-detail\");         // Passing the id that we assigned in our route in App.js file.\r\n\r\n    return (\r\n        <EventItem event={data.event}/>\r\n    );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nexport async function loader({request, params}) {\r\n    const id = params.eventId;\r\n    const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n    if (!response.ok) {\r\n        throw json({message: \"Could not fetch details for selected event.\"}, {status: 500});\r\n    } else {\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAGC,kBAAkB,QAAQ,kBAAkB;AAC5D,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC,CAAC,CAAS;;EAEzD,oBACIG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AAEvC,CAAC;AAAAN,EAAA,CAPKD,eAAe;EAAA,QAEJJ,kBAAkB;AAAA;AAAAY,EAAA,GAF7BR,eAAe;AASrB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC1C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMtB,IAAI,CAAC;MAACuB,OAAO,EAAE;IAA6C,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACvF,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
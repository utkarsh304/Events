{"ast":null,"code":"var _jsxFileName = \"C:\\\\Complete Web Development\\\\React.js\\\\01-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json, redirect } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 12\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\n// Just like loaders, action are used to send data to the backend :-\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData(); // formData() is an inbuilt function of action.\n\n  const eventData = {\n    title: data.get(\"title\"),\n    // Extracting data using in-built function get() and using name fo the\n    image: data.get(\"image\"),\n    // inputs in the Form.\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"could not save event\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["json","redirect","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","message","status","$RefreshReg$"],"sources":["C:/Complete Web Development/React.js/01-adv-starting-project/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json, redirect } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\n\r\nconst NewEventPage = () => {\r\n    return <EventForm/>;\r\n}\r\n\r\nexport default NewEventPage;\r\n// Just like loaders, action are used to send data to the backend :-\r\nexport async function action({request, params}) {\r\n    const data = await request.formData();                       // formData() is an inbuilt function of action.\r\n    \r\n    const eventData = {\r\n        title: data.get(\"title\"),                                // Extracting data using in-built function get() and using name fo the\r\n        image: data.get(\"image\"),                                // inputs in the Form.\r\n        date: data.get(\"date\"),\r\n        description: data.get(\"description\"),\r\n    }\r\n\r\n    const response = await fetch(\"http://localhost:8080/events\", {\r\n        method: \"POST\",\r\n        headers: {\"Content-Type\": \"application/json\"},\r\n        body: JSON.stringify(eventData)\r\n    });\r\n\r\n    if (!response.ok) {\r\n        throw json({message: \"could not save event\"}, {status: 500});\r\n    }\r\n\r\n    return redirect(\"/events\");\r\n}"],"mappings":";AAAA,SAASA,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACvB,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAE;AACvB,CAAC;AAAAC,EAAA,GAFKL,YAAY;AAIlB,eAAeA,YAAY;AAC3B;AACA,OAAO,eAAeM,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC1C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,EAAE,CAAC,CAAuB;;EAE7D,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IAAiC;IACzDC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IAAiC;IACzDE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACvC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAC,cAAc,EAAE;IAAkB,CAAC;IAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACZ,SAAS;EAClC,CAAC,CAAC;EAEF,IAAI,CAACM,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM9B,IAAI,CAAC;MAAC+B,OAAO,EAAE;IAAsB,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAChE;EAEA,OAAO/B,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAS,EAAA;AAAAuB,YAAA,CAAAvB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Complete Web Development\\\\React.js\\\\01-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from 'react-router-dom';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventsPage = () => {\n  _s();\n  const data = useLoaderData();\n\n  // if (data.isError) {\n  //     return <p>{data.message}</p>\n  // }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(EventsList, {\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 12\n  }, this);\n};\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message: \"Could not fetch events.\"};\n    // OR :-\n    // throw {message: \"Could not fetch events.s\"};\n    // OR :-\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events!\"\n    }), {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useLoaderData","EventsList","jsxDEV","_jsxDEV","EventsPage","_s","data","events","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["C:/Complete Web Development/React.js/01-adv-starting-project/frontend/src/pages/Events.js"],"sourcesContent":["import { useLoaderData } from 'react-router-dom';\r\n\r\nimport EventsList from '../components/EventsList';\r\n\r\nconst EventsPage = () => {\r\n    const data = useLoaderData();\r\n\r\n    // if (data.isError) {\r\n    //     return <p>{data.message}</p>\r\n    // }\r\n    const events = data.events;\r\n\r\n    return <EventsList events={events} />\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        // return {isError: true, message: \"Could not fetch events.\"};\r\n        // OR :-\r\n        // throw {message: \"Could not fetch events.s\"};\r\n        // OR :-\r\n        throw new Response(JSON.stringify({message: \"Could not fetch events!\"}), {status: 500});\r\n    } else {\r\n        // const resData = await response.json();\r\n        // return resData.events;\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAEhD,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,IAAI,GAAGN,aAAa,EAAE;;EAE5B;EACA;EACA;EACA,MAAMO,MAAM,GAAGD,IAAI,CAACC,MAAM;EAE1B,oBAAOJ,OAAA,CAACF,UAAU;IAACM,MAAM,EAAEA;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AACzC,CAAC;AAAAN,EAAA,CATKD,UAAU;EAAA,QACCJ,aAAa;AAAA;AAAAY,EAAA,GADxBR,UAAU;AAWhB,eAAeA,UAAU;AAEzB,OAAO,eAAeS,MAAMA,CAAA,EAAG;EAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA;IACA;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAACC,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC3F,CAAC,MAAM;IACH;IACA;IACA,OAAOP,QAAQ;EACnB;AACJ;AAAC,IAAAF,EAAA;AAAAU,YAAA,CAAAV,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
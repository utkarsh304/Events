{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aa1xx\\\\Desktop\\\\My Projects\\\\14.React-RoutingPagesAdvanced\\\\frontend\\\\src\\\\pages\\\\Error.js\",\n  _s = $RefreshSig$();\nimport { useRouteError } from \"react-router-dom\";\nimport MainNavigation from \"../components/MainNavigation\";\nimport PageContent from \"../components/PageContent\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ErrorPage = () => {\n  _s();\n  const error = useRouteError(); // useRouteError(); returns an object and object depends on weather we throw any response or error.\n\n  let title = \"An error occourred!\";\n  let message = \"Something went wrong!\";\n  if (error.status === 500) {\n    // message = JSON.parse(error.data).message;\n    message = error.data.message; // While using json from react-router-dom.\n  }\n\n  if (error.status === 404) {\n    title = \"Not found!\";\n    message = \"Could not find resource or page!\";\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MainNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PageContent, {\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(ErrorPage, \"oAgjgbJzsRXlB89+MoVumxMQqKM=\", false, function () {\n  return [useRouteError];\n});\n_c = ErrorPage;\nexport default ErrorPage;\nvar _c;\n$RefreshReg$(_c, \"ErrorPage\");","map":{"version":3,"names":["useRouteError","MainNavigation","PageContent","jsxDEV","_jsxDEV","Fragment","_Fragment","ErrorPage","_s","error","title","message","status","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aa1xx/Desktop/My Projects/14.React-RoutingPagesAdvanced/frontend/src/pages/Error.js"],"sourcesContent":["import { useRouteError } from \"react-router-dom\";\r\nimport MainNavigation from \"../components/MainNavigation\";\r\n\r\nimport PageContent from \"../components/PageContent\";\r\n\r\nconst ErrorPage = () => {\r\n    const error = useRouteError();               // useRouteError(); returns an object and object depends on weather we throw any response or error.\r\n\r\n    let title = \"An error occourred!\";\r\n    let message = \"Something went wrong!\";\r\n\r\n    if (error.status === 500) {\r\n        // message = JSON.parse(error.data).message;\r\n        message = error.data.message;            // While using json from react-router-dom.\r\n    }\r\n\r\n    if (error.status === 404) {\r\n        title = \"Not found!\";\r\n        message = \"Could not find resource or page!\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <MainNavigation />\r\n            <PageContent title={title}>\r\n                <p>{message}</p>\r\n            </PageContent>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ErrorPage;"],"mappings":";;AAAA,SAASA,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,cAAc,MAAM,8BAA8B;AAEzD,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,KAAK,GAAGT,aAAa,EAAE,CAAC,CAAe;;EAE7C,IAAIU,KAAK,GAAG,qBAAqB;EACjC,IAAIC,OAAO,GAAG,uBAAuB;EAErC,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;IACtB;IACAD,OAAO,GAAGF,KAAK,CAACI,IAAI,CAACF,OAAO,CAAC,CAAY;EAC7C;;EAEA,IAAIF,KAAK,CAACG,MAAM,KAAK,GAAG,EAAE;IACtBF,KAAK,GAAG,YAAY;IACpBC,OAAO,GAAG,kCAAkC;EAChD;EAEA,oBACIP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA,CAACH,cAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAClBd,OAAA,CAACF,WAAW;MAACQ,KAAK,EAAEA,KAAM;MAAAI,QAAA,eACtBV,OAAA;QAAAU,QAAA,EAAIH;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN;EAAA,gBACf;AAEX,CAAC;AAAAV,EAAA,CAxBKD,SAAS;EAAA,QACGP,aAAa;AAAA;AAAAmB,EAAA,GADzBZ,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Complete Web Development\\\\React.js\\\\01-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { json, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  // const data = useLoaderData();\n  const data = useRouteLoaderData(\"event-detail\"); // Passing the id that we assigned in our route in App.js file.\n\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return {isError: true, message: \"Could not fetch events.\"};\n    // OR :-\n    // throw {message: \"Could not fetch events.\"};\n    // OR :-\n    // throw new Response(JSON.stringify({ message: \"Could not fetch events!\" }), { status: 500 });\n    // OR :-\n    throw json({\n      message: \"Could not fetch events!\"\n    }, {\n      status: 500\n    }); // json from react-router-dom.\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n\n    // return response;\n\n    const resData = await response.json();\n    return resData;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  const eventId = params.eventId;\n  const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details for selected event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","redirect","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loadEvent","id","loadEvents","response","fetch","ok","message","status","resData","loader","_ref","request","params","eventId","action","_ref2","method","$RefreshReg$"],"sources":["C:/Complete Web Development/React.js/01-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { json, redirect, useRouteLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\"\r\n\r\nconst EventDetailPage = () => {\r\n    // const data = useLoaderData();\r\n    const data = useRouteLoaderData(\"event-detail\");         // Passing the id that we assigned in our route in App.js file.\r\n\r\n    return (\r\n        <EventItem event={data.event} />\r\n    );\r\n}\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id) {} \r\n\r\nasync function loadEvents() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        // return {isError: true, message: \"Could not fetch events.\"};\r\n        // OR :-\r\n        // throw {message: \"Could not fetch events.\"};\r\n        // OR :-\r\n        // throw new Response(JSON.stringify({ message: \"Could not fetch events!\" }), { status: 500 });\r\n        // OR :-\r\n        throw json({ message: \"Could not fetch events!\" }, { status: 500 });    // json from react-router-dom.\r\n    } else {\r\n        // const resData = await response.json();\r\n        // return resData.events;\r\n\r\n        // return response;\r\n\r\n        const resData = await response.json();\r\n        return resData;\r\n    }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n    const id = params.eventId;\r\n    const response = await fetch(\"http://localhost:8080/events/\" + id);\r\n    if (!response.ok) {\r\n        throw json({ message: \"Could not fetch details for selected event.\" }, { status: 500 });\r\n    } else {\r\n        return response;\r\n    }\r\n}\r\n\r\nexport async function action({ request, params }) {\r\n    const eventId = params.eventId;\r\n    const response = await fetch(\"http://localhost:8080/events/\" + eventId, {\r\n        method: request.method\r\n    });\r\n    if (!response.ok) {\r\n        throw json({ message: \"Could not fetch details for selected event.\" }, { status: 500 });\r\n    }\r\n    return redirect(\"/events\");\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,kBAAkB,QAAQ,kBAAkB;AACrE,OAAOC,SAAS,MAAM,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B;EACA,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC,CAAC,CAAS;;EAEzD,oBACIG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAExC,CAAC;AAAAN,EAAA,CAPKD,eAAe;EAAA,QAEJJ,kBAAkB;AAAA;AAAAY,EAAA,GAF7BR,eAAe;AASrB,eAAeA,eAAe;AAE9B,eAAeS,SAASA,CAACC,EAAE,EAAE,CAAC;AAE9B,eAAeC,UAAUA,CAAA,EAAG;EACxB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA;IACA;IACA;IACA;IACA,MAAMpB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAA0B,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC,CAAC,CAAI;EAC5E,CAAC,MAAM;IACH;IACA;;IAEA;;IAEA,MAAMC,OAAO,GAAG,MAAML,QAAQ,CAAClB,IAAI,EAAE;IACrC,OAAOuB,OAAO;EAClB;AACJ;AAEA,OAAO,eAAeC,MAAMA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC5C,MAAMT,EAAE,GAAGW,MAAM,CAACC,OAAO;EACzB,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMpB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAA8C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC3F,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAEA,OAAO,eAAeW,MAAMA,CAAAC,KAAA,EAAsB;EAAA,IAArB;IAAEJ,OAAO;IAAEC;EAAO,CAAC,GAAAG,KAAA;EAC5C,MAAMF,OAAO,GAAGD,MAAM,CAACC,OAAO;EAC9B,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGS,OAAO,EAAE;IACpEG,MAAM,EAAEL,OAAO,CAACK;EACpB,CAAC,CAAC;EACF,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;IACd,MAAMpB,IAAI,CAAC;MAAEqB,OAAO,EAAE;IAA8C,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAI,CAAC,CAAC;EAC3F;EACA,OAAOrB,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAa,EAAA;AAAAkB,YAAA,CAAAlB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}